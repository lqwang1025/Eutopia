// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/framework/graph_def.proto

#ifndef PROTOBUF_INCLUDED_core_2fframework_2fgraph_5fdef_2eproto
#define PROTOBUF_INCLUDED_core_2fframework_2fgraph_5fdef_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "core/framework/node_def.pb.h"
#include "core/framework/attr_value.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_core_2fframework_2fgraph_5fdef_2eproto 

namespace protobuf_core_2fframework_2fgraph_5fdef_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_core_2fframework_2fgraph_5fdef_2eproto
namespace eutopia {
namespace framework {
class GraphDef;
class GraphDefDefaultTypeInternal;
extern GraphDefDefaultTypeInternal _GraphDef_default_instance_;
class GraphDef_AttrEntry_DoNotUse;
class GraphDef_AttrEntry_DoNotUseDefaultTypeInternal;
extern GraphDef_AttrEntry_DoNotUseDefaultTypeInternal _GraphDef_AttrEntry_DoNotUse_default_instance_;
}  // namespace framework
}  // namespace eutopia
namespace google {
namespace protobuf {
template<> ::eutopia::framework::GraphDef* Arena::CreateMaybeMessage<::eutopia::framework::GraphDef>(Arena*);
template<> ::eutopia::framework::GraphDef_AttrEntry_DoNotUse* Arena::CreateMaybeMessage<::eutopia::framework::GraphDef_AttrEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace eutopia {
namespace framework {

// ===================================================================

class GraphDef_AttrEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<GraphDef_AttrEntry_DoNotUse, 
    ::std::string, ::eutopia::framework::AttrValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<GraphDef_AttrEntry_DoNotUse, 
    ::std::string, ::eutopia::framework::AttrValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  GraphDef_AttrEntry_DoNotUse();
  GraphDef_AttrEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const GraphDef_AttrEntry_DoNotUse& other);
  static const GraphDef_AttrEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GraphDef_AttrEntry_DoNotUse*>(&_GraphDef_AttrEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class GraphDef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eutopia.framework.GraphDef) */ {
 public:
  GraphDef();
  virtual ~GraphDef();

  GraphDef(const GraphDef& from);

  inline GraphDef& operator=(const GraphDef& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GraphDef(GraphDef&& from) noexcept
    : GraphDef() {
    *this = ::std::move(from);
  }

  inline GraphDef& operator=(GraphDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GraphDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GraphDef* internal_default_instance() {
    return reinterpret_cast<const GraphDef*>(
               &_GraphDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(GraphDef* other);
  void Swap(GraphDef* other);
  friend void swap(GraphDef& a, GraphDef& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GraphDef* New() const final {
    return CreateMaybeMessage<GraphDef>(NULL);
  }

  GraphDef* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GraphDef>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GraphDef& from);
  void MergeFrom(const GraphDef& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GraphDef* other);
  protected:
  explicit GraphDef(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .eutopia.framework.NodeDef node = 1;
  int node_size() const;
  void clear_node();
  static const int kNodeFieldNumber = 1;
  ::eutopia::framework::NodeDef* mutable_node(int index);
  ::google::protobuf::RepeatedPtrField< ::eutopia::framework::NodeDef >*
      mutable_node();
  const ::eutopia::framework::NodeDef& node(int index) const;
  ::eutopia::framework::NodeDef* add_node();
  const ::google::protobuf::RepeatedPtrField< ::eutopia::framework::NodeDef >&
      node() const;

  // map<string, .eutopia.framework.AttrValue> attr = 5;
  int attr_size() const;
  void clear_attr();
  static const int kAttrFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::eutopia::framework::AttrValue >&
      attr() const;
  ::google::protobuf::Map< ::std::string, ::eutopia::framework::AttrValue >*
      mutable_attr();

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // int32 version = 3 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_version();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kVersionFieldNumber = 3;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::int32 version() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eutopia.framework.GraphDef)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::eutopia::framework::NodeDef > node_;
  ::google::protobuf::internal::MapField<
      GraphDef_AttrEntry_DoNotUse,
      ::std::string, ::eutopia::framework::AttrValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > attr_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_core_2fframework_2fgraph_5fdef_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GraphDef

// repeated .eutopia.framework.NodeDef node = 1;
inline int GraphDef::node_size() const {
  return node_.size();
}
inline ::eutopia::framework::NodeDef* GraphDef::mutable_node(int index) {
  // @@protoc_insertion_point(field_mutable:eutopia.framework.GraphDef.node)
  return node_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::eutopia::framework::NodeDef >*
GraphDef::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:eutopia.framework.GraphDef.node)
  return &node_;
}
inline const ::eutopia::framework::NodeDef& GraphDef::node(int index) const {
  // @@protoc_insertion_point(field_get:eutopia.framework.GraphDef.node)
  return node_.Get(index);
}
inline ::eutopia::framework::NodeDef* GraphDef::add_node() {
  // @@protoc_insertion_point(field_add:eutopia.framework.GraphDef.node)
  return node_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::eutopia::framework::NodeDef >&
GraphDef::node() const {
  // @@protoc_insertion_point(field_list:eutopia.framework.GraphDef.node)
  return node_;
}

// string name = 2;
inline void GraphDef::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GraphDef::name() const {
  // @@protoc_insertion_point(field_get:eutopia.framework.GraphDef.name)
  return name_.Get();
}
inline void GraphDef::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eutopia.framework.GraphDef.name)
}
#if LANG_CXX11
inline void GraphDef::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:eutopia.framework.GraphDef.name)
}
#endif
inline void GraphDef::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eutopia.framework.GraphDef.name)
}
inline void GraphDef::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eutopia.framework.GraphDef.name)
}
inline ::std::string* GraphDef::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:eutopia.framework.GraphDef.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GraphDef::release_name() {
  // @@protoc_insertion_point(field_release:eutopia.framework.GraphDef.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void GraphDef::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eutopia.framework.GraphDef.name)
}
inline ::std::string* GraphDef::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eutopia.framework.GraphDef.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GraphDef::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eutopia.framework.GraphDef.name)
}

// int32 version = 3 [deprecated = true];
inline void GraphDef::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 GraphDef::version() const {
  // @@protoc_insertion_point(field_get:eutopia.framework.GraphDef.version)
  return version_;
}
inline void GraphDef::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:eutopia.framework.GraphDef.version)
}

// map<string, .eutopia.framework.AttrValue> attr = 5;
inline int GraphDef::attr_size() const {
  return attr_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::eutopia::framework::AttrValue >&
GraphDef::attr() const {
  // @@protoc_insertion_point(field_map:eutopia.framework.GraphDef.attr)
  return attr_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::eutopia::framework::AttrValue >*
GraphDef::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_map:eutopia.framework.GraphDef.attr)
  return attr_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace framework
}  // namespace eutopia

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_core_2fframework_2fgraph_5fdef_2eproto
